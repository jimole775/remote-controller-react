!function(I){var g={};function c(C){if(g[C])return g[C].exports;var e=g[C]={i:C,l:!1,exports:{}};return I[C].call(e.exports,e,e.exports,c),e.l=!0,e.exports}c.m=I,c.c=g,c.d=function(I,g,C){c.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:C})},c.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},c.t=function(I,g){if(1&g&&(I=c(I)),8&g)return I;if(4&g&&"object"==typeof I&&I&&I.__esModule)return I;var C=Object.create(null);if(c.r(C),Object.defineProperty(C,"default",{enumerable:!0,value:I}),2&g&&"string"!=typeof I)for(var e in I)c.d(C,e,function(g){return I[g]}.bind(null,e));return C},c.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return c.d(g,"a",g),g},c.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},c.p="E:\\gitStore\\remoteController",c(c.s=9)}([function(module,exports){eval('module.exports = require("path");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcInBhdGhcIj83NGJiIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInBhdGhcIik7Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(__dirname) {function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar fs = __webpack_require__(2);\n\nvar path = __webpack_require__(0);\n\n/* harmony default export */ __webpack_exports__["a"] = (new (\n/*#__PURE__*/\nfunction () {\n  function Log() {\n    _classCallCheck(this, Log);\n  }\n\n  _createClass(Log, [{\n    key: "data",\n    value: function data(_data) {\n      _data = Log.queryMsg(_data);\n      var timer = Log.getTimer();\n      var fileName = Log.createFileName("data");\n      var content = "\\u3010".concat(timer, "\\u3011\\r\\n").concat(_data, "\\r\\n");\n      this.writeFile("data", fileName, content);\n    }\n  }, {\n    key: "error",\n    value: function error(msg) {\n      msg = Log.queryMsg(msg);\n      var timer = Log.getTimer();\n      var fileName = Log.createFileName("error");\n      var content = "\\u3010".concat(timer, "\\u3011\\r\\n").concat(msg, "\\r\\n");\n      console.log(content);\n      this.writeFile("error", fileName, content);\n    }\n  }, {\n    key: "user",\n    value: function user(id, ip) {\n      id = Log.queryMsg(id);\n      ip = Log.queryMsg(ip);\n      var timer = Log.getTimer();\n      var fileName = Log.createFileName("user");\n      var content = "\\u3010".concat(timer, "\\u3011\\r\\n").concat(ip, " ").concat(id, "\\r\\n");\n      this.writeFile("user", fileName, content);\n    }\n  }, {\n    key: "writeFile",\n    value: function writeFile(type, filePath, content) {\n      var mkdir = new Promise(function (resolve, reject) {\n        fs.readdir(path.join(__dirname, type), function (err, fileGroup) {\n          if (fileGroup instanceof Array) resolve();else reject();\n        });\n      });\n      mkdir.then(function () {\n        fs.appendFile(filePath, content, "utf8");\n      }, function () {\n        fs.mkdir(path.join(__dirname, type), function () {\n          fs.appendFile(filePath, content, "utf8");\n        });\n      });\n    }\n  }], [{\n    key: "queryMsg",\n    value: function queryMsg(msg) {\n      if (_typeof(msg) === "object") {\n        try {\n          msg = JSON.stringify(msg);\n        } catch (error) {\n          msg = "".concat(error.message, "\\r\\n").concat(error.stack);\n        }\n      }\n\n      return msg;\n    }\n  }, {\n    key: "getTimer",\n    value: function getTimer() {\n      var now = new Date();\n      var h = now.getHours().toString(); //时\n\n      var m = now.getMinutes().toString(); //分\n\n      var s = now.getSeconds().toString(); //秒\n\n      h = h.length < 2 ? 0 + h : h;\n      m = m.length < 2 ? 0 + m : m;\n      s = s.length < 2 ? 0 + s : s;\n      return "".concat(h, ":").concat(m, ":").concat(s);\n    }\n  }, {\n    key: "createFileName",\n    value: function createFileName(type) {\n      var now = new Date();\n      var y = now.getFullYear();\n      var m = now.getMonth();\n      var d = now.getDay();\n      return path.resolve(__dirname.split("\\\\").join("/"), type, "".concat(y, ".").concat(m, ".").concat(d, ".log"));\n    }\n  }]);\n\n  return Log;\n}())());\n/* WEBPACK VAR INJECTION */}.call(this, "server\\\\log"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NlcnZlci9sb2cvbWFpbi5qcz8xMmY5Il0sInNvdXJjZXNDb250ZW50IjpbIlxyXG5jb25zdCBmcyA9IHJlcXVpcmUoXCJmc1wiKTtcclxuY29uc3QgcGF0aCA9IHJlcXVpcmUoXCJwYXRoXCIpO1xyXG5leHBvcnQgZGVmYXVsdCBuZXcgY2xhc3MgTG9nIHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIFxyXG4gICAgfVxyXG5cclxuICAgIGRhdGEoZGF0YSl7XHJcbiAgICAgICAgZGF0YSA9IExvZy5xdWVyeU1zZyhkYXRhKTtcclxuICAgICAgICBsZXQgdGltZXIgPSBMb2cuZ2V0VGltZXIoKTtcclxuICAgICAgICBsZXQgZmlsZU5hbWUgPSBMb2cuY3JlYXRlRmlsZU5hbWUoXCJkYXRhXCIpO1xyXG4gICAgICAgIGxldCBjb250ZW50ID0gYOOAkCR7dGltZXJ944CRXFxyXFxuJHtkYXRhfVxcclxcbmA7XHJcbiAgICAgICAgdGhpcy53cml0ZUZpbGUoXCJkYXRhXCIsIGZpbGVOYW1lLCBjb250ZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBlcnJvcihtc2cpIHtcclxuICAgICAgICBtc2cgPSBMb2cucXVlcnlNc2cobXNnKTtcclxuICAgICAgICBsZXQgdGltZXIgPSBMb2cuZ2V0VGltZXIoKTtcclxuICAgICAgICBsZXQgZmlsZU5hbWUgPSBMb2cuY3JlYXRlRmlsZU5hbWUoXCJlcnJvclwiKTtcclxuICAgICAgICBsZXQgY29udGVudCA9IGDjgJAke3RpbWVyfeOAkVxcclxcbiR7bXNnfVxcclxcbmA7XHJcbiAgICAgICAgY29uc29sZS5sb2coY29udGVudCk7XHJcbiAgICAgICAgdGhpcy53cml0ZUZpbGUoXCJlcnJvclwiLCBmaWxlTmFtZSwgY29udGVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgdXNlcihpZCwgaXApIHtcclxuICAgICAgICBpZCA9IExvZy5xdWVyeU1zZyhpZCk7XHJcbiAgICAgICAgaXAgPSBMb2cucXVlcnlNc2coaXApO1xyXG4gICAgICAgIGxldCB0aW1lciA9IExvZy5nZXRUaW1lcigpO1xyXG4gICAgICAgIGxldCBmaWxlTmFtZSA9IExvZy5jcmVhdGVGaWxlTmFtZShcInVzZXJcIik7XHJcbiAgICAgICAgbGV0IGNvbnRlbnQgPSBg44CQJHt0aW1lcn3jgJFcXHJcXG4ke2lwfSAke2lkfVxcclxcbmA7XHJcbiAgICAgICAgdGhpcy53cml0ZUZpbGUoXCJ1c2VyXCIsIGZpbGVOYW1lLCBjb250ZW50KVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBxdWVyeU1zZyhtc2cpIHtcclxuICAgICAgICBpZiAodHlwZW9mIG1zZyA9PT0gXCJvYmplY3RcIikge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgbXNnID0gSlNPTi5zdHJpbmdpZnkobXNnKTtcclxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuXHJcbiAgICAgICAgICAgICAgICBtc2cgPSBgJHtlcnJvci5tZXNzYWdlfVxcclxcbiR7ZXJyb3Iuc3RhY2t9YDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIG1zZztcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0VGltZXIoKSB7XHJcbiAgICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcclxuICAgICAgICBsZXQgaCA9IG5vdy5nZXRIb3VycygpLnRvU3RyaW5nKCk7ICAvL+aXtlxyXG4gICAgICAgIGxldCBtID0gbm93LmdldE1pbnV0ZXMoKS50b1N0cmluZygpOyAgLy/liIZcclxuICAgICAgICBsZXQgcyA9IG5vdy5nZXRTZWNvbmRzKCkudG9TdHJpbmcoKTsgIC8v56eSXHJcbiAgICAgICAgaCA9IGgubGVuZ3RoIDwgMiA/IDAgKyBoIDogaDtcclxuICAgICAgICBtID0gbS5sZW5ndGggPCAyID8gMCArIG0gOiBtO1xyXG4gICAgICAgIHMgPSBzLmxlbmd0aCA8IDIgPyAwICsgcyA6IHM7XHJcbiAgICAgICAgcmV0dXJuIGAke2h9OiR7bX06JHtzfWA7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGNyZWF0ZUZpbGVOYW1lKHR5cGUpIHtcclxuICAgICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xyXG5cclxuICAgICAgICBsZXQgeSA9IG5vdy5nZXRGdWxsWWVhcigpO1xyXG4gICAgICAgIGxldCBtID0gbm93LmdldE1vbnRoKCk7XHJcbiAgICAgICAgbGV0IGQgPSBub3cuZ2V0RGF5KCk7XHJcblxyXG4gICAgICAgIHJldHVybiBwYXRoLnJlc29sdmUoX19kaXJuYW1lLnNwbGl0KFwiXFxcXFwiKS5qb2luKFwiL1wiKSwgdHlwZSwgYCR7eX0uJHttfS4ke2R9LmxvZ2ApO1xyXG4gICAgfVxyXG5cclxuICAgIHdyaXRlRmlsZSh0eXBlLCBmaWxlUGF0aCwgY29udGVudCkgeyAgICAgICAgXHJcblxyXG4gICAgICAgIGxldCBta2RpciA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcclxuICAgICAgICAgICAgZnMucmVhZGRpcihwYXRoLmpvaW4oX19kaXJuYW1lLCB0eXBlKSwgZnVuY3Rpb24gKGVyciwgZmlsZUdyb3VwKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZmlsZUdyb3VwIGluc3RhbmNlb2YgQXJyYXkpIHJlc29sdmUoKTtcclxuICAgICAgICAgICAgICAgIGVsc2UgcmVqZWN0KCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIG1rZGlyXHJcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIGZzLmFwcGVuZEZpbGUoZmlsZVBhdGgsIGNvbnRlbnQsIFwidXRmOFwiKTtcclxuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgZnMubWtkaXIocGF0aC5qb2luKF9fZGlybmFtZSwgdHlwZSksIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICBmcy5hcHBlbmRGaWxlKGZpbGVQYXRoLCBjb250ZW50LCBcInV0ZjhcIik7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgfVxyXG5cclxuXHJcbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBRUE7QUFDQTtBQUxBO0FBQUE7QUFBQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVpBO0FBQUE7QUFBQTtBQWVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBckJBO0FBQUE7QUFBQTtBQXdCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTlCQTtBQUFBO0FBQUE7QUFvRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFwRkE7QUFBQTtBQUFBO0FBaUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBM0NBO0FBQUE7QUFBQTtBQThDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF0REE7QUFBQTtBQUFBO0FBeURBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQWhFQTtBQUNBO0FBREE7QUFBQTtBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n')},function(module,exports){eval('module.exports = require("fs");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImZzXCI/YTQwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJmc1wiKTsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CreateHttp; });\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5);\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(http__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(0);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(6);\n/* harmony import */ var zlib__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(zlib__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var log__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(1);\n/**\r\n * Created by Andy on 2017/2/8.\r\n */\n\n\n\n\n\n\nclass CreateHttp {\n  constructor() {\n    this.url = url__WEBPACK_IMPORTED_MODULE_0___default.a;\n    this.http = http__WEBPACK_IMPORTED_MODULE_1___default.a;\n    this.fs = fs__WEBPACK_IMPORTED_MODULE_2___default.a;\n    this.path = path__WEBPACK_IMPORTED_MODULE_3___default.a;\n    this.zlib = zlib__WEBPACK_IMPORTED_MODULE_4___default.a;\n    this.log = log__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"];\n  }\n\n  open(port) {\n    let that = this;\n    that.http.createServer(function (req, res) {\n      that.writeHead(req, res).response(req, res);\n    }).listen(port, function () {});\n  }\n\n  writeHead(req, res) {\n    let fileName = req.url.split("/").pop();\n    fileName = fileName ? fileName : "index.html";\n    let extension = fileName.split(".").pop();\n    let contentType = "text/html";\n    let contentEncoding = "gzip";\n    let useCache = true;\n    console.log("req.url: ", req.url);\n\n    switch (extension) {\n      case "css":\n        contentType = "text/css";\n        break;\n\n      case "html":\n        contentType = "text/html";\n        contentEncoding = null;\n        useCache = false;\n        break;\n\n      case "js":\n        contentType = "application/javascript";\n        break;\n\n      case "png":\n      case "jpg":\n      case "jpeg":\n      case "gif":\n        contentType = "image/" + extension;\n        contentEncoding = null;\n        break;\n\n      case "ico":\n        contentType = "image/" + extension;\n        contentEncoding = null;\n        useCache = false;\n        break;\n\n      default:\n        // ajax请求不会带后缀，默认就是请求json数据类型\n        // 日后还会有xml数据类型\n        contentType = "application/json";\n        useCache = false;\n        contentEncoding = null;\n        break;\n    }\n\n    let headOption = {\n      "Content-Type": contentType\n    };\n    if (useCache) headOption["Cache-Control"] = "max-age=" + 30 * 24 * 60 * 60 * 1000;\n    if (contentEncoding) headOption["Content-Encoding"] = contentEncoding;\n    res.writeHead(200, headOption);\n    return this;\n  }\n\n  response(req, res) {\n    let that = this;\n    let xRequestedWith = req.headers["x-requested-with"];\n    let extension = that.path.extname(req.url);\n    let gzipHandler = that.zlib.createGzip();\n    console.log("xRequestedWith: ", xRequestedWith);\n\n    if (req.url == "/") {\n      console.log("来自 ", req.headers["referer"], " 的请求"); //初始化客户端；\n\n      that.fs.readFile(that.path.join(SOURCES_DIS, req.url, "index.html"), function (err, chunk) {\n        if (err) {\n          that.log.error(err);\n        } else {\n          res.write(chunk.toString());\n        }\n\n        res.end();\n      });\n    }\n\n    if (extension) {\n      //CDN资源请求；      \n      let fileStream = null;\n\n      if (/\\.(png|jpg|jpeg|gif|ico)$/.test(extension)) {\n        // 图片类型转换成“base64”输出\n        fileStream = that.fs.createReadStream(that.path.join(ASSETS_DIS, req.url));\n        fileStream.pipe(res);\n      } else {\n        fileStream = that.fs.createReadStream(that.path.join(SOURCES_DIS, req.url));\n        fileStream.pipe(gzipHandler).pipe(res);\n      }\n    } // ajax请求：\n\n\n    if (xRequestedWith) {\n      // noinspection JSAnnotator\n      function upsetFinalData(item, targetProp) {\n        if (!Math.round(Math.random())) {\n          if (item[targetProp] instanceof Array) {\n            item[targetProp].length = 0;\n          } else {\n            item[targetProp] = {};\n          }\n        }\n\n        return item;\n      }\n\n      req.on("data", function (data) {\n        let ajaxData = new that.url.parse("?" + data.toString(), true).query;\n        let filename = ajaxData.dataType + ".json";\n        console.log("the db direct", that.path.join(DB_DIS, req.url, filename));\n        that.fs.readFile(that.path.join(DB_DIS, req.url, filename), function (err, chunk) {\n          if (err) {\n            that.log.error(err);\n          } else {\n            let scannerData = JSON.parse(chunk.toString());\n            let finalData = Object.assign(scannerData.items[ajaxData.index], {\n              itemcount: scannerData.itemcount\n            });\n            res.write(JSON.stringify(upsetFinalData(finalData, "info")));\n          }\n\n          res.end();\n        });\n      });\n    }\n\n    return this;\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n')},function(module,exports){eval('module.exports = require("url");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcInVybFwiPzYxZTgiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwidXJsXCIpOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n')},function(module,exports){eval('module.exports = require("http");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImh0dHBcIj84ZDE5Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImh0dHBcIik7Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n')},function(module,exports){eval('module.exports = require("zlib");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcInpsaWJcIj9lNTkxIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInpsaWJcIik7Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6\n')},function(module,exports){eval('module.exports = require("crypto");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9leHRlcm5hbCBcImNyeXB0b1wiPzRjNzYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiY3J5cHRvXCIpOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: external "path"\nvar external_path_ = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./server/socket/services/tool/payload.compiler/frameEncode.js\n/**\r\n * Created by Andy on 2017/11/4.\r\n */\n/* harmony default export */ var frameEncode = (function (e) {\n  var s = [],\n      o = new Buffer(e.PayloadData),\n      l = o.length; //输入第一个字节\n\n  s.push((e.FIN << 7) + e.Opcode); //输入第二个字节，判断它的长度并放入相应的后续长度消息\n  //永远不使用掩码\n\n  if (l < 126) {\n    s.push(l);\n  } else if (l < 0x10000) {\n    s.push(126, (l & 0xFF00) >> 8, l & 0xFF);\n  } else {\n    //8字节数据，前4字节一般没用留空;\n    s.push(127, 0, 0, 0, 0, (l & 0xFF000000) >> 24, (l & 0xFF0000) >> 16, (l & 0xFF00) >> 8, l & 0xFF);\n  } //返回头部分和数据部分的合并缓冲区\n\n\n  return Buffer.concat([new Buffer(s), o]);\n});\n// CONCATENATED MODULE: ./server/socket/services/tool/payload.compiler/frameDecode.js\n/**\r\n * Created by Andy on 2017/11/4.\r\n */\n/* harmony default export */ var frameDecode = (function (e) {\n  let i = 0,\n      j,\n      s,\n      frame = {\n    //解析前两个字节的基本数据\n    FIN: e[i] >> 7,\n    Opcode: e[i++] & 15,\n    Mask: e[i] >> 7,\n    PayloadLength: e[i++] & 0x7F\n  };\n\n  if (frame.PayloadLength == 126) {\n    //处理特殊长度126和127\n    frame.PayloadLength = (e[i++] << 8) + e[i++];\n  }\n\n  if (frame.PayloadLength == 127) {\n    i += 4; //长度一般用四字节的整型，前四个字节通常为长整形留空的\n\n    frame.PayloadLength = (e[i++] << 24) + (e[i++] << 16) + (e[i++] << 8) + e[i++];\n  }\n\n  if (frame.Mask) {\n    //判断是否使用掩码\n    //获取掩码实体\n    frame.MaskingKey = [e[i++], e[i++], e[i++], e[i++]]; //对数据和掩码做异或运算\n\n    for (j = 0, s = []; j < frame.PayloadLength; j++) s.push(e[i + j] ^ frame.MaskingKey[j % 4]);\n  } else {\n    s = e.slice(i, frame.PayloadLength); //否则直接使用数据\n  } //数组转换成缓冲区来使用\n\n\n  s = new Buffer(s); //如果有必要则把缓冲区转换成字符串来使用\n\n  if (frame.Opcode == 1) {\n    s = s.toString();\n  } //设置上数据部分\n\n\n  frame.PayloadData = s; //返回数据帧\n\n  return frame;\n});\n// CONCATENATED MODULE: ./server/socket/services/tool/exports.js\n/**\r\n * Created by Andy on 2017/3/14.\r\n */\n\n\n\n\nfunction add(target, name, file) {\n  target.prototype[name] = file;\n} //@add(Tool,"frameEncode", frameEncode);\n//@add(Tool,"frameDecode", frameDecode);\n\n\nclass Tool {\n  constructor() {}\n\n}\n\nadd(Tool, "frameEncode", frameEncode);\nadd(Tool, "frameDecode", frameDecode);\n/* harmony default export */ var tool_exports = (new Tool());\n// CONCATENATED MODULE: ./public/plugin/StorageRegister/StorageRegister.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * Created by Andy on 2017/11/9.\r\n */\nvar StorageRegister =\n/*#__PURE__*/\nfunction () {\n  function StorageRegister() {\n    var inject = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, StorageRegister);\n\n    this.storage = inject;\n  }\n\n  _createClass(StorageRegister, [{\n    key: "getStorage",\n    value: function getStorage(name) {\n      return this.storage[name];\n    }\n  }, {\n    key: "setStorage",\n    value: function setStorage(itemName, innerProp, val) {\n      /* if (this.storage[itemName] instanceof Array) {\r\n           val = prop;\r\n           this.storage[itemName].push(val);\r\n       }\r\n       else */\n      if (val === undefined) {\n        val = innerProp;\n        this.storage[itemName] = val;\n      } else {\n        this.storage[itemName][innerProp] = val;\n      }\n\n      return this;\n    }\n  }, {\n    key: "addStorage",\n    value: function addStorage(itemName, val) {\n      if (this.storage[itemName] instanceof Array) {\n        this.storage[itemName].push(val);\n      } else {\n        throw new Error("this storage isn\'t a Array!");\n      }\n\n      return this;\n    }\n  }, {\n    key: "delStorage",\n    value: function delStorage(name, val) {\n      if (this.storage[name] instanceof Array) {\n        var index = val;\n        this.storage[name].splice(index, 1);\n      } else {\n        delete this.storage[name][val];\n      }\n\n      return this;\n    }\n  }], [{\n    key: "version",\n    value: function version() {\n      console.log("v1.0");\n    }\n  }, {\n    key: "author",\n    value: function author() {\n      console.log("我不tell you~");\n    }\n  }]);\n\n  return StorageRegister;\n}();\n\n\n// CONCATENATED MODULE: ./server/socket/services/socket.storage/socketStorage.js\n/**\r\n * Created by Andy on 2017/11/7.\r\n */\n\nlet storage = {\n  clients: {},\n  namesMap: [],\n  remoteChanelMap: [],\n  opcode: 0\n};\n/* harmony default export */ var socketStorage = (new StorageRegister(storage));\n// CONCATENATED MODULE: ./server/socket/emitter/emitter.js\n/**\r\n * Created by Andy on 2017/3/23.\r\n */\n\n\n/* harmony default export */ var emitter = (function (status, emitData, socket) {\n  let opcode = socketStorage.getStorage("opcode");\n  let emitProtocolMap = {\n    "status": status,\n    "serverData": emitData,\n    // 谁发上来的数据，就返回给谁，其他用户一律返回null\n    "clientData": emitData.clientData && emitData.clientData.uid === socket.uid ? emitData.clientData : null\n  };\n  console.log("emitProtocolMap:", emitProtocolMap);\n  let PayloadData = opcode == 1 ? JSON.stringify(emitProtocolMap) : new Buffer(JSON.stringify(emitProtocolMap));\n  if (socket.uid && socket.writable) socket.write(tool_exports.frameEncode({\n    FIN: 1,\n    Opcode: opcode,\n    PayloadData: PayloadData\n  }));\n});\n// CONCATENATED MODULE: ./server/socket/interactive/tasks/disconnectChanel.js\n/**\r\n * Created by Andy on 2017/11/4.\r\n */\n\n\n/* harmony default export */ var disconnectChanel = (function (socket, data) {\n  let fromUid = socket.uid;\n  let clients = socketStorage.getStorage("clients");\n  let namesMap = socketStorage.getStorage("namesMap");\n  let remoteChanelMap = socketStorage.getStorage("remoteChanelMap") || [];\n  let askerUid = null;\n  let helperUid = null; // 排查断开的用户，检查是否与其他用户有通讯\n  // 删除配对通道，并告知通信的另一端\n\n  remoteChanelMap.forEach(function (item, index) {\n    if (item.askerUid == fromUid || item.helperUid == fromUid) {\n      askerUid = item.askerUid;\n      helperUid = item.helperUid;\n      emitter(0xFF, {\n        remoteId: 0,\n        remoteChanelMap: socketStorage.delStorage("remoteChanelMap", index).getStorage("remoteChanelMap")\n      }, clients[askerUid == fromUid ? helperUid : askerUid]);\n    }\n  }); // 另行通知其他所有的用户 哪两个用户结束远程业务\n  // 解除用户列表中"busing"状态，使其可以被选取\n\n  namesMap.forEach(function (item) {\n    if (askerUid == item || helperUid == item) return;\n    emitter(0x07, {\n      remoteChanelMap: socketStorage.getStorage("remoteChanelMap")\n    }, clients[item]);\n  });\n});\n;\n// CONCATENATED MODULE: ./server/socket/interactive/tasks/reduceUser.js\n/**\r\n * Created by Andy on 2017/11/4.\r\n */\n\n //通知前端删除断开的用户\n\n/* harmony default export */ var reduceUser = (function (socket) {\n  let namesMap = socketStorage.getStorage("namesMap");\n  let clients = socketStorage.getStorage("clients");\n  let deadUid = socket.uid;\n\n  if (deadUid) {\n    //删除断线的会话，\n    socketStorage.delStorage("clients", deadUid); //删除断线的用户名，\n\n    let index = namesMap.indexOf(deadUid);\n    console.log("删除了用户：", namesMap[index]);\n    socketStorage.delStorage("namesMap", index);\n    console.log("删除之后剩余的用户：", socketStorage.getStorage("namesMap"));\n  } //刷新用户列表到客户端\n\n\n  socketStorage.getStorage("namesMap").forEach(function (item, index) {\n    let clients = socketStorage.getStorage("clients");\n    emitter(0xFE, {\n      deadUid: socket.uid\n    }, clients[item]);\n  });\n});\n;\n// CONCATENATED MODULE: ./server/socket/interactive/tasks/heartBeat.js\n/**\r\n * Created by Andy on 2017/11/4.\r\n */\n\n/* harmony default export */ var heartBeat = (function (socket, data) {\n  setTimeout(function () {\n    emitter(0x00, {\n      fin: "1"\n    }, socket);\n  }, 5 * 60 * 1000); //5分鐘一次心跳\n});\n;\n// EXTERNAL MODULE: ./server/log/main.js\nvar main = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./server/socket/interactive/tasks/userRegister.js\n/**\r\n * Created by Andy on 2017/11/4.\r\n */\n\n\n // 绑定用户信息\n\n/* harmony default export */ var userRegister = (function (socket, data) {\n  socket.uid = data.uid;\n  main["a" /* default */].user(data.uid, `${socket.remoteAddress}:${socket.remotePort}`);\n  let namesMap = socketStorage.getStorage("namesMap");\n  let clients = socketStorage.getStorage("clients");\n\n  if (namesMap.indexOf(data.uid) < 0) {\n    socketStorage.addStorage("namesMap", data.uid);\n    socketStorage.setStorage("clients", data.uid, socket); // 向所有的用户推送用户名\n    // 不过要把包含用户目标的名字去掉\n\n    socketStorage.getStorage("namesMap").forEach(function (item, index) {\n      let curNamesMap = Array.prototype.slice.call(socketStorage.getStorage("namesMap"));\n      curNamesMap.splice(curNamesMap.indexOf(item), 1);\n      let remoteChanelMap = socketStorage.getStorage("remoteChanelMap") || [];\n      let curClients = socketStorage.getStorage("clients"); // 由于前面有操作，在推送之前重新获取\n\n      emitter(0x01, {\n        namesMap: curNamesMap,\n        "regPass": true,\n        clientData: data,\n        remoteChanelMap: remoteChanelMap\n      }, curClients[item]);\n    });\n  } else {\n    emitter(0x01, {\n      namesMap: [],\n      "regPass": false,\n      clientData: data\n    }, socket); //用戶名已經被注冊\n  }\n});\n;\n// CONCATENATED MODULE: ./server/socket/interactive/tasks/connectAsk.js\n/**\r\n * Created by Andy on 2017/11/4.\r\n */\n\n // 远程链接询问，把询问信息推给协助者\n\n/* harmony default export */ var connectAsk = (function (socket, data) {\n  let clients = socketStorage.getStorage("clients");\n  let helper = clients[data.remoteUid.helperUid];\n  emitter(0x02, {\n    uiHref: data.items.uiHref,\n    remoteUid: {\n      askerUid: data.remoteUid.askerUid,\n      helperUid: data.remoteUid.helperUid\n    }\n  }, helper);\n});\n;\n// CONCATENATED MODULE: ./server/socket/interactive/tasks/connectAccept.js\n/**\r\n * Created by Andy on 2017/11/4.\r\n */\n\n\n/* harmony default export */ var connectAccept = (function (socket, data) {\n  let namesMap = socketStorage.getStorage("namesMap");\n  let clients = socketStorage.getStorage("clients");\n  let askerUid = data.remoteUid.askerUid;\n  let helperUid = data.remoteUid.helperUid; // 存储远程业务中的两端，主要用于在用户未注册的时候，一口气把所有通道发给前端，让前端自己处理\n\n  socketStorage.addStorage("remoteChanelMap", {\n    "askerUid": askerUid,\n    "helperUid": helperUid\n  }); // 通知所有的用户哪两个用户正在进行远程业务\n\n  namesMap.forEach(function (item) {\n    if (askerUid == item || helperUid == item) return;\n    emitter(0x06, {\n      remoteChanel: {\n        "askerUid": askerUid,\n        "helperUid": helperUid\n      }\n    }, clients[item]);\n  });\n  var asker = clients[askerUid];\n  var helper = clients[helperUid]; // 给通讯中的用户派发身份标识 （求助者ID：1，协助者ID：2）\n\n  emitter(0x03, {\n    remoteId: 1,\n    remoteUid: {\n      "askerUid": askerUid,\n      "helperUid": helperUid\n    }\n  }, asker);\n  emitter(0x03, {\n    remoteId: 2,\n    remoteUid: {\n      "askerUid": askerUid,\n      "helperUid": helperUid\n    }\n  }, helper);\n});\n;\n// CONCATENATED MODULE: ./server/socket/interactive/tasks/connectReject.js\n/**\r\n * Created by Andy on 2017/11/4.\r\n */\n\n // 远程链接询问，把询问信息推给协助者\n\n/* harmony default export */ var connectReject = (function (socket, data) {\n  let clients = socketStorage.getStorage("clients");\n  let helper = clients[data.remoteUid.helperUid];\n  emitter(0x02, {\n    uiHref: data.items.uiHref,\n    remoteUid: {\n      askerUid: data.remoteUid.askerUid,\n      helperUid: data.remoteUid.helperUid\n    }\n  }, helper);\n});\n;\n// CONCATENATED MODULE: ./server/socket/interactive/tasks/interActivePassageway.js\n/**\r\n * Created by Andy on 2017/11/4.\r\n */\n\n //远程交互\n\n/* harmony default export */ var interActivePassageway = (function (socket, data) {\n  let clients = socketStorage.getStorage("clients");\n  let asker = clients[data.remoteUid.askerUid];\n  let helper = clients[data.remoteUid.helperUid];\n\n  if (data.remoteId == 1) {// 求助者，接收的只有 点击事件\n    //emitter(0x05, data.items, helper);\n  } else if (data.remoteId == 2) {\n    // 协助者，接收的只有 ajax 数据\n    emitter(0x05, data.items, asker);\n  }\n});\n;\n// CONCATENATED MODULE: ./server/socket/interactive/tasks/charChanel.js\n/**\r\n * Created by Andy on 2018/1/6.\r\n */\n\n // 远程链接询问，把询问信息推给协助者\n\n/* harmony default export */ var charChanel = (function (data) {\n  let toWhom = data.items.oppositeName;\n  let fromWhom = data.items.nativeName;\n  let clients = socketStorage.getStorage("clients");\n  data.items.oppositeName = fromWhom;\n  data.items.nativeName = toWhom;\n  emitter(0x08, data.items, clients[toWhom]); //  emitter(\n  //     0x08,\n  //     {\n  //         oppositeName: fromWhom\n  //       , nativeName: toWhom\n  //     },\n  //     clients[toWhom]\n  // );\n});\n;\n// CONCATENATED MODULE: ./server/socket/interactive/tasks/ajaxDataRegister.js\n/**\r\n * Created by Andy on 2018/1/10.\r\n */\n\n\nlet ajaxDataCache = new Map();\n/* harmony default export */ var ajaxDataRegister = (function (socket, data) {\n  let clients = socketStorage.getStorage("clients");\n  let helperUid = data.remoteUid.helperUid;\n  let askerUid = data.remoteUid.askerUid;\n  let fromUid = data.uid;\n\n  if (askerUid === fromUid) {\n    // 如果数据来自 asker，就存储，如果数据来自helper，就逐帧发送\n    ajaxDataCache.set(data.items.ajaxCallbackId, {\n      json: data.items.json,\n      ajaxCallbackId: data.items.ajaxCallbackId,\n      status: data.items.status\n    });\n  }\n\n  if (helperUid === fromUid) {\n    let doneId = data.items.doneId;\n    sniff(ajaxDataCache, doneId, 5, function () {\n      emitter(0x09, {\n        status: ajaxDataCache.get(doneId).status,\n        json: ajaxDataCache.get(doneId).json,\n        ajaxCallbackId: ajaxDataCache.get(doneId).ajaxCallbackId\n      }, clients[helperUid]); // 发送完毕之后，清理；\n\n      ajaxDataCache.delete(doneId);\n    });\n  }\n});\n\nfunction sniff(ajaxDataCache, doneId, times, callback) {\n  if (times <= 0) {\n    console.log("callbackId 未能及时上传~");\n    return;\n  }\n\n  let promise = new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      let result = ajaxDataCache.get(doneId);\n      result ? resolve(result) : reject(result);\n    }, 500);\n  });\n  promise.then(callback, function () {\n    sniff(ajaxDataCache, doneId, --times, callback);\n  });\n}\n// CONCATENATED MODULE: ./server/socket/interactive/tasks/scrollCoordinate.js\n/**\r\n * Created by Andy on 2018/1/13.\r\n */\n\n\n/* harmony default export */ var scrollCoordinate = (function (socket, data) {\n  let clients = socketStorage.getStorage("clients");\n  let helperUid = data.remoteUid.helperUid;\n  let askerUid = data.remoteUid.askerUid;\n  let fromUid = data.uid;\n\n  if (helperUid === fromUid) {\n    emitter(0x0A, data.items, clients[askerUid]);\n  }\n});\n// CONCATENATED MODULE: ./server/socket/interactive/host.js\n/**\r\n * Created by Andy on 2017/3/14.\r\n */\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ var host = (function (frame, socket) {\n  switch (frame.Opcode) {\n    case 8:\n      var data = frame.PayloadData.slice(2).toString();\n      console.log("会话已经结束:", socket, data);\n      if (socket.uid) disconnectChanel(socket, data);\n      if (socket.uid) reduceUser(socket, data);\n      socket.end();\n      socket.destroy(); //删除断线的session，\n\n      break;\n\n    default:\n      socketStorage.setStorage("opcode", frame.Opcode);\n      var data = JSON.parse(frame.PayloadData.toString()) || "";\n\n      switch (data.port) {\n        case 0x00:\n          heartBeat(socket, data);\n          break;\n\n        case 0x01:\n          //返回一個pass信號，並存儲用戶數據\n          userRegister(socket, data);\n          break;\n\n        case 0x02:\n          //协助通道的询问\n          connectAsk(socket, data);\n          break;\n\n        case 0x03:\n          //协助通道的应答\n          connectAccept(socket, data);\n          break;\n\n        case 0x04:\n          connectReject(socket, data);\n          break;\n\n        case 0x05:\n          //远程协助交互通道\n          interActivePassageway(socket, data);\n          break;\n\n        case 0x06:\n          break;\n\n        case 0x07:\n          break;\n\n        case 0x08:\n          charChanel(data);\n          break;\n\n        case 0x09:\n          //交接callbackID\n          ajaxDataRegister(socket, data);\n          break;\n\n        case 0x0A:\n          //交接scroll坐标\n          scrollCoordinate(socket, data);\n          break;\n\n        case 0xFE:\n          disconnectChanel(socket, data);\n          break;\n\n        case 0xFF:\n          //断开协助通道//关闭ws\n          //that.close(data);\n          //console.log("中断远程用户");\n          break;\n\n        default:\n          break;\n      }\n\n      break;\n  }\n});\n;\n// EXTERNAL MODULE: external "crypto"\nvar external_crypto_ = __webpack_require__(7);\nvar external_crypto_default = /*#__PURE__*/__webpack_require__.n(external_crypto_);\n\n// CONCATENATED MODULE: ./server/socket/init/shakehand/shakehand.js\n/**\r\n * Created by Andy on 2017/11/6.\r\n */\n\n\nconst mask = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11"; //单个用户的握手实例;\n\n/* harmony default export */ var shakehand = (function (e, socket) {\n  let original = e.toString().match(/Sec-WebSocket-Key: (.+)/)[1];\n  let key = external_crypto_default.a.createHash("sha1").update(original + mask).digest("base64");\n  socket.write("HTTP/1.1 101 Switching Protocols\\r\\n");\n  socket.write("Upgrade:Websocket\\r\\n");\n  socket.write("Connection:Upgrade\\r\\n");\n  socket.write("Sec-WebSocket-Accept:" + key + "\\r\\n");\n  socket.write("\\r\\n");\n});\n// CONCATENATED MODULE: ./server/socket/init/open/open.js\n\n\n\n\n/* harmony default export */ var open_open = __webpack_exports__["a"] = (function (port) {\n  let netServer = __webpack_require__(10).createServer(function (socket) {\n    socket.on(\'error\', function (e) {\n      main["a" /* default */].error(e);\n    });\n    socket.on(\'data\', function (e) {\n      let frame = tool_exports.frameDecode(e); //第一次握手\n\n      if (frame.FIN === 0) {\n        console.log("握手");\n        shakehand(e, socket);\n      } //数据交互\n      else {\n          host(frame, socket);\n        }\n    });\n  }).listen(port, () => {});\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(__dirname) {/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _http_init_open_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);\n/* harmony import */ var _socket_init_open_open_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);\n/**\r\n * Created by Andy on 2017/12/2.\r\n */\n\nglobal.ROOT_DIS = path__WEBPACK_IMPORTED_MODULE_0___default.a.resolve(__dirname, "../");\nconsole.log(global.ROOT_DIS);\nglobal.SOURCES_DIS = path__WEBPACK_IMPORTED_MODULE_0___default.a.resolve(__dirname, "../client/src");\nglobal.ASSETS_DIS = path__WEBPACK_IMPORTED_MODULE_0___default.a.resolve(__dirname, "../client/src/assets");\nconsole.log(global.CLIENT_DIS);\nglobal.SERVER_DIS = path__WEBPACK_IMPORTED_MODULE_0___default.a.resolve(__dirname);\nconsole.log(global.SERVER_DIS);\nglobal.DB_DIS = path__WEBPACK_IMPORTED_MODULE_0___default.a.resolve(global.SERVER_DIS, "database/json");\nconsole.log(global.DB_DIS);\n\nnew _http_init_open_js__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"]().open(80);\n\nObject(_socket_init_open_open_js__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"])(81);\n/* WEBPACK VAR INJECTION */}.call(this, "server"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NlcnZlci9pbmRleC5qcz8wYThiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IEFuZHkgb24gMjAxNy8xMi8yLlxyXG4gKi9cclxuaW1wb3J0IHBhdGggZnJvbSBcInBhdGhcIjtcclxuZ2xvYmFsLlJPT1RfRElTID0gcGF0aC5yZXNvbHZlKF9fZGlybmFtZSxcIi4uL1wiKTtcclxuXHJcbmNvbnNvbGUubG9nKGdsb2JhbC5ST09UX0RJUyk7XHJcbmdsb2JhbC5TT1VSQ0VTX0RJUyA9IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsXCIuLi9jbGllbnQvc3JjXCIpO1xyXG5nbG9iYWwuQVNTRVRTX0RJUyA9IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsXCIuLi9jbGllbnQvc3JjL2Fzc2V0c1wiKTtcclxuY29uc29sZS5sb2coZ2xvYmFsLkNMSUVOVF9ESVMpO1xyXG5nbG9iYWwuU0VSVkVSX0RJUyA9IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUpO1xyXG5jb25zb2xlLmxvZyhnbG9iYWwuU0VSVkVSX0RJUyk7XHJcbmdsb2JhbC5EQl9ESVMgPSBwYXRoLnJlc29sdmUoZ2xvYmFsLlNFUlZFUl9ESVMsXCJkYXRhYmFzZS9qc29uXCIpO1xyXG5jb25zb2xlLmxvZyhnbG9iYWwuREJfRElTKTtcclxuXHJcblxyXG5pbXBvcnQgQ3JlYXRlSHR0cCBmcm9tIFwiLi9odHRwL2luaXQvb3Blbi5qc1wiO1xyXG4obmV3IENyZWF0ZUh0dHAoKSkub3Blbig4MCk7XHJcblxyXG5pbXBvcnQgY3JlYXRlU29ja2V0IGZyb20gXCIuL3NvY2tldC9pbml0L29wZW4vb3Blbi5qc1wiO1xyXG5jcmVhdGVTb2NrZXQoODEpOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7QUFHQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFFQTtBQUNBO0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9\n')},function(module,exports){eval('module.exports = require("net");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJuZXRcIj8yMWVkIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIm5ldFwiKTsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///10\n')}]);